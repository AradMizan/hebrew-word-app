<!DOCTYPE html>
<html lang="he" dir="rtl">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>מילים בעברית - אפליקציה</title>
<style>
  body {
    font-family: 'Arial', sans-serif;
    background-color: #fdf6f0;
    color: #444;
    margin: 0;
    padding: 50px 20px;
    display: flex;
    flex-direction: column;
    align-items: center;
    min-height: 100vh;
    box-sizing: border-box;
  }
  h1 {
    color: #ff9aa2;
    margin-bottom: 30px;
    font-size: 2.5rem;
  }
  .word-box {
    font-size: 3.5rem;
    background-color: #ffdac1;
    border-radius: 20px;
    padding: 30px 60px;
    min-width: 300px;
    min-height: 120px;
    display: flex;
    justify-content: center;
    align-items: center;
    user-select: none;
    text-align: center;
    margin-bottom: 40px;
  }
  .buttons-row {
    display: flex;
    gap: 15px;
    flex-wrap: wrap;
    justify-content: center;
  }
  button {
    background-color: #b5ead7;
    border: none;
    padding: 15px 30px;
    font-size: 1.3rem;
    border-radius: 15px;
    cursor: pointer;
    user-select: none;
    min-width: 150px;
    transition: transform 0.2s;
  }
  button:hover:not(:disabled) {
    transform: scale(1.05);
  }
  button:disabled {
    background-color: #cccccc;
    cursor: not-allowed;
    transform: none;
  }
  .counter {
    margin-top: 25px;
    font-size: 1.4rem;
    color: #ffb7b2;
  }
  .timer {
    margin-top: 10px;
    font-size: 1.5rem;
    color: #ff6f61;
  }
  #successBtn {
    margin-top: 20px;
    background-color: #ffd97d;
    display: none;
    min-width: 300px;
  }
</style>
</head>
<body>

<h1>מילים בעברית</h1>

<div class="word-box" id="word">לחץ על "קבל מילה" כדי להתחיל</div>

<div class="buttons-row">
  <button id="getWordBtn">קבל מילה</button>
  <button id="skipBtn">דלג על מילה (2)</button>
  <button id="shuffleBtn">ערבב מילים</button>
  <button id="resetBtn">אפס מונה ומילים</button>
</div>

<div class="counter">מספר מילים שנלקחו: <span id="counter">-1</span></div>
<div class="timer" id="timer">30</div>

<button id="successBtn">הצלחתי לנחש את המילה האחרונה</button>

<script>
  // רשימת מילים (אפשר להוסיף/לשנות)
  const words = [
    "גשר", "מכנסיים", "בית קפה", "רופא", "בית ספר", "מקלדת", "תיק", "ידיעה",
    "ילד", "גלים", "חולצה", "בריכה", "סבא", "אופניים", "משחק", "גן", "בית ספר",
    "כלב", "דוד", "חמאה", "פארק", "טלוויזיה", "קריאה", "מנעול", "סוכריה",
    "חנות", "נעליים", "נהר", "פסנתר", "בשר", "תיק", "ים", "ילדים", "כדור",
    // הוספתי מעט מילים כדי שהקוד יהיה קצר, תוכל להוסיף את כולן
  ];

  let count = -1;             // ספירת מילים מוצגות (לא כולל דילוג)
  let roundStartIndex = 0;    // תחילת הסיבוב (התחלה לא מופיע כבר)
  let currentIndex = 0;       // אינדקס המילה הנוכחית במערך
  let skipsLeft = 2;          // דילוגים שנותרו
  let timerStarted = false;   // האם הטיימר רץ

  const getWordBtn = document.getElementById('getWordBtn');
  const skipBtn = document.getElementById('skipBtn');
  const shuffleBtn = document.getElementById('shuffleBtn');
  const resetBtn = document.getElementById('resetBtn');
  const counterSpan = document.getElementById('counter');
  const wordDiv = document.getElementById('word');
  const timerDiv = document.getElementById('timer');
  const successBtn = document.getElementById('successBtn');

  let timer = 30;
  let timerInterval;

  function startTimer() {
    clearInterval(timerInterval);
    timer = 30;
    timerDiv.textContent = timer;
    timerInterval = setInterval(() => {
      timer--;
      timerDiv.textContent = timer;
      if (timer <= 0) {
        clearInterval(timerInterval);
        beep();
        getWordBtn.disabled = true;
        skipBtn.disabled = true;
        successBtn.style.display = "inline-block";
        alert("הזמן נגמר!");
      }
    }, 1000);
  }

  function beep() {
    try {
      const context = new AudioContext();
      const o = context.createOscillator();
      const g = context.createGain();
      o.type = "sine";
      o.frequency.value = 440;
      o.connect(g);
      g.connect(context.destination);
      o.start(0);
      g.gain.exponentialRampToValueAtTime(0.00001, context.currentTime + 0.1);
      o.stop(context.currentTime + 0.1);
    } catch {
      // אם אין תמיכה ב-AudioContext, לא קריטי
    }
  }

  function showNextWord() {
    if (!timerStarted) {
      startTimer();
      timerStarted = true;
      count = -1;
      currentIndex = roundStartIndex;
      skipsLeft = 2;
      skipBtn.disabled = false;
      skipBtn.textContent = `דלג על מילה (${skipsLeft})`;
    }

    if (currentIndex >= words.length) {
      alert("הגעת לסוף המילים! לחץ על 'ערבב מילים' כדי להתחיל מחדש.");
      getWordBtn.disabled = true;
      skipBtn.disabled = true;
      return;
    }

    wordDiv.textContent = words[currentIndex];
    count++;
    counterSpan.textContent = count;
    currentIndex++;

    if (currentIndex >= words.length) {
      roundStartIndex = currentIndex;
      getWordBtn.disabled = true;
      skipBtn.disabled = true;
    }
  }

  function skipWord() {
    if (!timerStarted) {
      startTimer();
      timerStarted = true;
      count = -1;
      currentIndex = roundStartIndex;
      skipsLeft = 2;
      skipBtn.disabled = false;
      skipBtn.textContent = `דלג על מילה (${skipsLeft})`;
    }

    if (skipsLeft > 0 && currentIndex < words.length) {
      skipsLeft--;
      currentIndex++;
      skipBtn.textContent = `דלג על מילה (${skipsLeft})`;

      if (skipsLeft === 0) {
        skipBtn.disabled = true;
      }

      if (currentIndex >= words.length) {
        roundStartIndex = currentIndex;
        getWordBtn.disabled = true;
        skipBtn.disabled = true;
      }

      wordDiv.textContent = words[currentIndex] || "הגעת לסוף המילים!";
    }
  }

  function shuffleWords() {
    for (let i = words.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [words[i], words[j]] = [words[j], words[i]];
    }
    roundStartIndex = 0;
    resetApp(true);
  }

  function resetApp(isShuffleReset = false) {
    clearInterval(timerInterval);
    timerStarted = false;
    timerDiv.textContent = "30";
    successBtn.style.display = "none";
    getWordBtn.disabled = false;
    skipBtn.disabled = false;
    skipsLeft = 2;
    skipBtn.textContent = `דלג על מילה (${skipsLeft})`;
    skipBtn.disabled = false;

    if (isShuffleReset) {
      count = -1;
      currentIndex = roundStartIndex;
    } else {
      // כאשר לוחצים על אפס מונה, דלג על כל המילים שהוצגו עד כה
      roundStartIndex = currentIndex;
      count = -1;
      currentIndex = roundStartIndex;
    }

    counterSpan.textContent = count;
    wordDiv.textContent = 'לחץ על "קבל מילה" כדי להתחיל';
    getWordBtn.disabled = false;
  }

  function successGuess() {
    count++;
    counterSpan.textContent = count;
    successBtn.style.display = "none";
  }

  // מאזינים לכפתורים
  getWordBtn.addEventListener('click', showNextWord);
  skipBtn.addEventListener('click', skipWord);
  shuffleBtn.addEventListener('click', shuffleWords);
  resetBtn.addEventListener('click', () => resetApp(false));
  successBtn.addEventListener('click', successGuess);
</script>

</body>
</html>
